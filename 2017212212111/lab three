//创建Express服务器:
const express = require('express')
const app = express()

//1.以get方法访问 /time 以 yyyy-mm-dd hh:mm:ss 返回当前时间
app.get('/time', (req, res) => {

    //获取当前日期，年月日时分秒：
    Date.prototype.format = function (format) {
        var args = {
            "M+": this.getMonth() + 1,
            "d+": this.getDate(),
            "h+": this.getHours(),
            "m+": this.getMinutes(),
            "s+": this.getSeconds(),
            "q+": Math.floor((this.getMonth() + 3) / 3),  //quarter
            "S": this.getMilliseconds()
        };
        if (/(y+)/.test(format))
            format = format.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
        for (var i in args) {
            var n = args[i];
            if (new RegExp("(" + i + ")").test(format))
                format = format.replace(RegExp.$1, RegExp.$1.length == 1 ? n : ("00" + n).substr(("" + n).length));
        }
        return format;
    };
    res.send(new Date().format("yyyy-MM-dd hh:mm:ss"))
})

//2.以post方法访问 /user 显示 /etc/passwd 中所有的用户名
app.post('/user', (req, res) => {
    
    读取text文件内容
    function user(){
        var arr = new Array(); 
        var userName="";
        const fs = require("fs");
        var data = fs.readFileSync('/etc/passwd', 'utf8');
        data.toString().split(/\n/).forEach(element => {
            arr = element.split(":");
            userName += arr[0] + '\n';
            arrReturn.push(arrRow[0]);
        });
        return (userName);
    }
    res.send(user());
})

//3.以get方法访问 /phone/:id 要求检测传入id的格式是否为有效的移动电话，正确返回OK，否则返回NO
app.get('/phone/:id', function(req, res){

    //访问在url中传递的参数并赋值给x
    x=req.params.id;

    //判断电话号是否合法
    function IsTelephone(obj){
        var pattern=/(^[0-9]{3,4}\-[0-9]{3,8}$)|(^[0-9]{3,8}$)|(^\([0-9]{3,4}\)[0-9]{3,8}$)|(^0{0,1}13[0-9]{9}$)/;
        if(pattern.test(obj)){
            return true;
        }
        else{
            return false;
        }
    }

    if(IsTelephone(x)==true)
        res.send('The id is legitimate' );
    else
        res.send('The id is illegal' );
 });

app.listen(8900, () => console.log('listening on port 8900'))
